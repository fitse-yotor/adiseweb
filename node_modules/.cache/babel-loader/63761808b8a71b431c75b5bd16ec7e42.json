{"remainingRequest":"/home/tobia/Documents/siyume app/addisecom/node_modules/babel-loader/lib/index.js!/home/tobia/Documents/siyume app/addisecom/node_modules/eslint-loader/index.js??ref--13-0!/home/tobia/Documents/siyume app/addisecom/src/services/product.service.js","dependencies":[{"path":"/home/tobia/Documents/siyume app/addisecom/src/services/product.service.js","mtime":1635800072000},{"path":"/home/tobia/Documents/siyume app/addisecom/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/tobia/Documents/siyume app/addisecom/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/tobia/Documents/siyume app/addisecom/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3RvYmlhL0RvY3VtZW50cy9zaXl1bWUgYXBwL2FkZGlzZWNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgYXhpb3MgZnJvbSAiLi9hcGkuc2VydmljZSI7CmltcG9ydCB7IGVycm9yLCBpbmZvIH0gZnJvbSAiLi9sb2dnZXIuc2VydmljZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBnZXRQcm9kdWN0czogZnVuY3Rpb24gKCkgewogICAgdmFyIF9nZXRQcm9kdWN0cyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShmaWx0ZXIpIHsKICAgICAgdmFyIGRhdGEsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgZGF0YSA9IHsKICAgICAgICAgICAgICAgIHBhcmFtczogZmlsdGVyCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCJwcm9kdWN0cyIsIGRhdGEpLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICAgICAgaW5mbyhlcnJvcik7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gOTsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIGVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgOV1dKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBnZXRQcm9kdWN0cyhfeCkgewogICAgICByZXR1cm4gX2dldFByb2R1Y3RzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIGdldFByb2R1Y3RzOwogIH0oKSwKICBpbWFnZVVwbG9hZDogZnVuY3Rpb24gKCkgewogICAgdmFyIF9pbWFnZVVwbG9hZCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoZGF0YSkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJVcGxvYWRpbmciKTsKICAgICAgICAgICAgICBheGlvcy5wb3N0KCJwcm9kdWN0cy8iICsgZGF0YS5pZCArICIvdXBsb2FkLWF2YXRhciIsIGRhdGEuZmlsZSwgewogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAiQ29udGVudC1UeXBlIjogIm11bHRpcGFydC9mb3JtLWRhdGEiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSk7CgogICAgZnVuY3Rpb24gaW1hZ2VVcGxvYWQoX3gyKSB7CiAgICAgIHJldHVybiBfaW1hZ2VVcGxvYWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gaW1hZ2VVcGxvYWQ7CiAgfSgpLAogIGdldFByb2R1Y3REZXRhaWxzOiBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX2dldFByb2R1Y3REZXRhaWxzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhpZCkgewogICAgICB2YXIgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCJwcm9kdWN0cy8iICsgaWQpLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICAgICAgaW5mbyhlcnJvcik7CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gNzsKICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgZXJyb3IoX2NvbnRleHQzLnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1swLCA3XV0pOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIGdldFByb2R1Y3REZXRhaWxzKF94MykgewogICAgICByZXR1cm4gX2dldFByb2R1Y3REZXRhaWxzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIGdldFByb2R1Y3REZXRhaWxzOwogIH0oKSwKICBhZGRQcm9kdWN0czogZnVuY3Rpb24gKCkgewogICAgdmFyIF9hZGRQcm9kdWN0cyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQocHJvZHVjdCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCgicHJvZHVjdHMiLCBwcm9kdWN0KTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQ0LnNlbnQpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTQpOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIGFkZFByb2R1Y3RzKF94NCkgewogICAgICByZXR1cm4gX2FkZFByb2R1Y3RzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIGFkZFByb2R1Y3RzOwogIH0oKSwKICB1cGRhdGVQcm9kdWN0czogZnVuY3Rpb24gKCkgewogICAgdmFyIF91cGRhdGVQcm9kdWN0cyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTUocHJvZHVjdCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucHV0KCJwcm9kdWN0cy8iICsgcHJvZHVjdC5pZCwgcHJvZHVjdCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0NS5zZW50KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU1KTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiB1cGRhdGVQcm9kdWN0cyhfeDUpIHsKICAgICAgcmV0dXJuIF91cGRhdGVQcm9kdWN0cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiB1cGRhdGVQcm9kdWN0czsKICB9KCksCiAgZGVsZXRlUHJvZHVjdDogZnVuY3Rpb24gKCkgewogICAgdmFyIF9kZWxldGVQcm9kdWN0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNihpZCkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTYkKF9jb250ZXh0NikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ni5wcmV2ID0gX2NvbnRleHQ2Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZGVsZXRlKCJwcm9kdWN0cy8iICsgaWQudG9TdHJpbmcoKSArICIvIik7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0Ni5zZW50KTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU2KTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBkZWxldGVQcm9kdWN0KF94NikgewogICAgICByZXR1cm4gX2RlbGV0ZVByb2R1Y3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH0KCiAgICByZXR1cm4gZGVsZXRlUHJvZHVjdDsKICB9KCkKfTs="},{"version":3,"sources":["/home/tobia/Documents/siyume app/addisecom/src/services/product.service.js"],"names":["axios","error","info","getProducts","filter","data","params","console","log","get","catch","response","imageUpload","post","id","file","headers","getProductDetails","addProducts","product","updateProducts","put","deleteProduct","delete","toString"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,kBAA5B;AAEA,eAAe;AACbC,EAAAA,WAAW;AAAA,+EAAE,iBAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGLC,cAAAA,IAHK,GAGE;AACTC,gBAAAA,MAAM,EAAEF;AADC,eAHF;AAMXG,cAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AANW;AAAA,qBAQYL,KAAK,CACvBS,GADkB,aACFJ,IADE,EAElBK,KAFkB,CAEZ,UAAST,KAAT,EAAgB;AACrBM,gBAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAC,gBAAAA,IAAI,CAACD,KAAD,CAAJ;AACD,eALkB,CARZ;;AAAA;AAQLU,cAAAA,QARK;AAAA,+CAcFA,QAdE;;AAAA;AAAA;AAAA;AAgBTV,cAAAA,KAAK,aAAL;;AAhBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADE;AAqBbW,EAAAA,WAAW;AAAA,+EAAE,kBAAeP,IAAf;AAAA;AAAA;AAAA;AAAA;AACXE,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEAR,cAAAA,KAAK,CAACa,IAAN,CAAW,cAAcR,IAAI,CAACS,EAAnB,GAAwB,gBAAnC,EAAqDT,IAAI,CAACU,IAA1D,EAAgE;AAC9DC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AADqD,eAAhE;;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KArBE;AA+BbC,EAAAA,iBAAiB;AAAA,qFAAE,kBAAeH,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEMd,KAAK,CAACS,GAAN,CAAU,cAAcK,EAAxB,EAA4BJ,KAA5B,CAAkC,UAAST,KAAT,EAAgB;AACrEM,gBAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAC,gBAAAA,IAAI,CAACD,KAAD,CAAJ;AACD,eAHoB,CAFN;;AAAA;AAEXU,cAAAA,QAFW;AAAA,gDAMRA,QANQ;;AAAA;AAAA;AAAA;AAQfV,cAAAA,KAAK,cAAL;;AARe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA/BJ;AA2CbiB,EAAAA,WAAW;AAAA,+EAAE,kBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACEnB,KAAK,CAACa,IAAN,CAAW,UAAX,EAAuBM,OAAvB,CADF;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA3CE;AA8CbC,EAAAA,cAAc;AAAA,kFAAE,kBAAeD,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACDnB,KAAK,CAACqB,GAAN,CAAU,cAAcF,OAAO,CAACL,EAAhC,EAAoCK,OAApC,CADC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA9CD;AAiDbG,EAAAA,aAAa;AAAA,iFAAE,kBAAeR,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACAd,KAAK,CAACuB,MAAN,CAAa,cAAcT,EAAE,CAACU,QAAH,EAAd,GAA8B,GAA3C,CADA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAjDA,CAAf","sourcesContent":["import axios from \"./api.service\";\nimport { error, info } from \"./logger.service\";\n\nexport default {\n  getProducts: async function(filter) {\n    \n    try {\n      let data = {\n        params: filter,\n      }\n    console.log(data)\n\n      let response = await axios\n        .get(`products`, data)\n        .catch(function(error) {\n          console.log(error);\n          info(error);\n        });\n      return response;\n    } catch (e) {\n      error(e);\n    }\n  },\n\n  imageUpload: async function(data) {\n    console.log(\"Uploading\");\n\n    axios.post(\"products/\" + data.id + \"/upload-avatar\", data.file, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    });\n  },\n\n  getProductDetails: async function(id) {\n    try {\n      let response = await axios.get(`products/` + id).catch(function(error) {\n        console.log(error);\n        info(error);\n      });\n      return response;\n    } catch (e) {\n      error(e);\n    }\n  },\n\n  addProducts: async function(product) {\n    return await axios.post(\"products\", product);\n  },\n  updateProducts: async function(product) {\n    return await axios.put(\"products/\" + product.id, product);\n  },\n  deleteProduct: async function(id) {\n    return await axios.delete(\"products/\" + id.toString() + \"/\");\n  },\n};\n"]}]}