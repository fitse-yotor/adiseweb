{"remainingRequest":"/Users/macbook/Desktop/my projects/vue/addisecom/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbook/Desktop/my projects/vue/addisecom/src/views/dashboard/products/product_details.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/macbook/Desktop/my projects/vue/addisecom/src/views/dashboard/products/product_details.vue","mtime":1635802334613},{"path":"/Users/macbook/Desktop/my projects/vue/addisecom/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbook/Desktop/my projects/vue/addisecom/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/macbook/Desktop/my projects/vue/addisecom/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/macbook/Desktop/my projects/vue/addisecom/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbook/Desktop/my projects/vue/addisecom/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucHJvZHVjdGltYWdlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICB3aWR0aDogMzV2aDsKICBoZWlnaHQ6IDM1dmg7CiAgYm9yZGVyLXJhZGl1czogMnZoOwogIG1hcmdpbi1yaWdodDogNXZ3Owp9CgoubWFpbnJvdyB7CiAgd2lkdGg6IDEwMCU7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogcm93OwogIG92ZXJmbG93OiBhdXRvOwogIG1hcmdpbi1ib3R0b206IDV2aDsKfQo="},{"version":3,"sources":["product_details.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuTA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"product_details.vue","sourceRoot":"src/views/dashboard/products","sourcesContent":["<template>\n  <div class=\"mainacontainer\">\n    <v-container>\n\n      <div class=\"mainrow\">\n            <div v-for=\"image in this.productImages\" :key=\"image\">\n              <!-- {{ \"http://localhost:3000/\" + image}} -->\n                <v-img class=\"productimage\" :lazy-src=\"'http://localhost:3000/' + image\"></v-img>\n            </div>\n          </div>\n\n      <template>\n          <div class=\"container\" style=\"margin: 3vh;\">\n              <label>\n                <input type=\"file\" @change=\"handleFileUpload( $event )\"/>\n              </label>\n          </div>\n        </template>\n\n      <v-row>\n        <v-col cols=\"4\">\n          <v-combobox\n            v-model=\"supplier\"\n            :items=\"this.suppliers\"\n            item-text=\"fname\"\n            item-value=\"id\"\n            label=\"Pick a supplier\"\n            @change=\"supplierSelected\"\n            chips\n          >\n            <template v-slot:selection=\"data\">\n              <v-chip\n                :key=\"JSON.stringify(data.item)\"\n                v-bind=\"data.attrs\"\n                :input-value=\"data.selected\"\n                :disabled=\"data.disabled\"\n                @click:close=\"data.parent.selectItem(data.item)\"\n              >\n                <v-avatar\n                  class=\"accent white--text\"\n                  left\n                  v-text=\"data.item.fname.slice(0, 1).toUpperCase()\"\n                ></v-avatar>\n                {{ data.item.fname + \" \" + data.item.lname }}\n              </v-chip>\n            </template>\n          </v-combobox>\n        </v-col>\n\n        <v-col cols=\"4\">\n          <v-combobox\n            v-model=\"category\"\n            :items=\"this.categories\"\n            item-text=\"name\"\n            item-value=\"id\"\n            label=\"Pick a category\"\n            chips\n          >\n            <template v-slot:selection=\"data\">\n              <v-chip\n                :key=\"JSON.stringify(data.item)\"\n                v-bind=\"data.attrs\"\n                :input-value=\"data.selected\"\n                :disabled=\"data.disabled\"\n                @click:close=\"data.parent.selectItem(data.item)\"\n              >\n                <v-avatar\n                  class=\"accent white--text\"\n                  left\n                  v-text=\"data.item.name.slice(0, 1).toUpperCase()\"\n                ></v-avatar>\n                {{ data.item.name }}\n              </v-chip>\n            </template>\n          </v-combobox>\n        </v-col>\n\n          <v-col cols=\"6\">\n            <v-text-field\n              label=\"Product name*\"\n              v-model=\"name\"\n              required\n              dense\n              outlined\n            ></v-text-field>\n          </v-col>\n\n          <v-col cols=\"6\">\n            <v-text-field\n              v-model=\"description\"\n              label=\"Description\"\n              required\n              dense\n              outlined\n            ></v-text-field>\n          </v-col>\n\n          <v-col cols=\"6\">\n            <v-text-field\n              v-model=\"code\"\n              label=\"Product Code\"\n              required\n              dense\n              outlined\n            ></v-text-field>\n          </v-col>\n          <v-col cols=\"6\">\n            <v-text-field\n              type=\"number\"\n              v-model=\"price\"\n              label=\"Price\"\n              required\n              dense\n              outlined\n            ></v-text-field>\n          </v-col>\n\n          <v-col cols=\"6\">\n            <v-text-field\n              type=\"number\"\n              v-model=\"stock\"\n              label=\"Stock\"\n              required\n              dense\n              outlined\n            ></v-text-field>\n          </v-col>\n\n          <v-col cols=\"6\">\n            <v-text-field\n              type=\"text\"\n              v-model=\"uom\"\n              label=\"Unit of Measure\"\n              required\n              dense\n              outlined\n            ></v-text-field>\n          </v-col>\n\n          <v-col cols=\"6\">\n          <v-switch\n            v-model=\"available\"\n            :label=\"`Available`\"\n          ></v-switch>\n     </v-col>\n     \n      </v-row>\n\n      <!-- <v-col cols=\"4\"> -->\n      <v-btn\n        @click=\"localUpdate()\"\n        class=\"primary\"\n        style=\"width: 50%; margin-top: 5%\"\n      >\n        Update\n      </v-btn>\n      <!-- </v-col> -->\n    <br />\n\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from \"vuex\";\n\nexport default {\n  computed: {\n    ...mapState(\"products\", [\"product\"]),\n    ...mapState(\"suppliers\", [\"suppliers\"]),\n    ...mapState(\"categories\", [\"categories\"]),\n\n    price: {\n      get() {\n        return this.$store.state.products.product.price;\n      },\n      set(value) {\n        this.$store.commit(\"products/setProductPrice\", value);\n      },\n    },\n\n    productImages: {\n      get() {\n        return this.$store.state.products.productImages;\n      },\n\n    },\n\n    name: {\n      get() {\n        return this.$store.state.products.product.name;\n      },\n      set(value) {\n        this.$store.commit(\"products/setProductName\", value);\n      },\n    },\n    uom: {\n      get() {\n        return this.$store.state.products.product.uom;\n      },\n      set(value) {\n        this.$store.commit(\"products/setProductUOM\", value);\n      },\n    },\n    stock: {\n      get() {\n        return this.$store.state.products.product.stock;\n      },\n      set(value) {\n        this.$store.commit(\"products/setProductStock\", value);\n      },\n    },\n    category: {\n      get() {\n        return this.$store.state.products.product.Category;\n      },\n      set(value) {\n        this.$store.commit(\"products/setProductCategory\", value);\n      },\n    },\n    description: {\n      get() {\n        return this.$store.state.products.product.description;\n      },\n      set(value) {\n        this.$store.commit(\"products/setProductDescription\", value);\n      },\n    },\n    code: {\n      get() {\n        return this.$store.state.products.product.code;\n      },\n      set(value) {\n        this.$store.commit(\"products/setProductCode\", value);\n      },\n    },\n    available: {\n      get() {\n        return this.$store.state.products.product.available;\n      },\n      set(value) {\n        this.$store.commit(\"products/setProductAvailable\", value);\n      },\n    },\n    supplier: {\n      get() {\n        return this.$store.state.products.product.Supplier;\n      },\n      set(value) {\n        this.oldsupplier = this.$store.state.products.product.Supplier\n        this.$store.commit(\"products/setProductSupplier\", value);\n      },\n    },\n\n    baseurl: {\n      get() {\n          return process.env.VUE_APP_BASE_URL\n      }\n    }\n  },\n\n  data() {\n    return {\n      files: [],\n      file: \"\",\n      oldsupplier: undefined\n    };\n  },\n  mounted() {\n    this.getProductDetails(this.$route.params.id);\n    this.getSuppliers();\n    this.getCategory();\n  },\n  methods: {\n    ...mapActions(\"products\", [\"getProductDetails\", \"updateProduct\", \"productImageUpload\"]),\n    ...mapActions(\"suppliers\", [\"getSuppliers\", \"updateSupplier\"]),\n    ...mapActions(\"categories\", [\"getCategory\"]),\n\n    async supplierSelected(){\n      await this.localUpdate()\n    },\n\n    handleFileUpload( event ){\n      this.file = event.target.files[0];\n      console.log(\"File choosen\")\n      this.submitFile()\n    },\n\n    submitFile(){\n      console.log(\"Submiting\")\n\n        let formData = new FormData();\n        formData.append('avatar', this.file);\n        this.productImageUpload({\n          file: formData,\n          id: this.product.id,\n        })\n    },\n\n    async localUpdate() {\n      //  console.log(this.product)\n      \n      await this.updateProduct(this.product);\n      // await this.getProductDetails(this.$route.params.id);\n    },\n  },\n};\n</script>\n\n\n<style>\n.productimage {\n  background-color: white;\n  width: 35vh;\n  height: 35vh;\n  border-radius: 2vh;\n  margin-right: 5vw;\n}\n\n.mainrow {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  overflow: auto;\n  margin-bottom: 5vh;\n}\n</style>"]}]}